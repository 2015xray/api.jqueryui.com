<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="draggable" namespace="fn" type="widget" widgetnamespace="ui">
	<title>Draggable Widget</title>
	<desc>Allow mouse interactions with elements, moving them around.</desc>
	<longdesc>
		<p>Make the selected elements draggable by mouse. If you want not just drag, but drag-and-drop, see the <a href="/droppable">jQuery UI Droppable plugin</a>, which provides a drop target for draggables.</p>
	</longdesc>
	<added>1.0</added>
	<options>
		<option name="addClasses" default="true">
			<desc>If set to <code>false</code>, will prevent the <code>ui-draggable</code> class from being added. This may be desired as a performance optimization when calling <code>.draggable()</code> on hundreds of elements.</desc>
			<type name="Boolean" />
		</option>
		<option name="appendTo" default='"parent"'>
			<desc>The element passed to or selected by the <code>appendTo</code> option will be used as the draggable helper's container during dragging. By default, the helper is appended to the same container as the draggable.</desc>
			<type name="Element" />
			<type name="Selector" />
		</option>
		<option name="axis" default="false">
			<desc>Constrains dragging to either the horizontal (x) or vertical (y) axis. Possible values: <code>"x"</code>, <code>"y"</code>.</desc>
			<type name="String" />
		</option>
		<option name="cancel" default='"input,textarea,button,select,option"'>
			<desc>Prevents dragging from starting on specified elements.</desc>
			<type name="Selector" />
		</option>
		<option name="connectToSortable" default="false">
			<desc>Allows the draggable to be dropped onto the specified sortables. If this option is used, a draggable can be dropped onto a sortable list and then becomes part of it. Note: The <a href="#option-helper"><code>helper</code></a> option must be set to <code>"clone"</code> in order to work flawlessly. Requires the <a href="/sortable">jQuery UI Sortable plugin</a> to be included.</desc>
			<type name="Selector" />
		</option>
		<option name="containment" default="false">
			<desc>Constrains dragging to within the bounds of the specified element or region. Possible string values: are <code>"parent"</code>, <code>"document"</code>, <code>"window"</code>, or any selector. Arrays must be of the form <code>[ x1, y1, x2, y2 ]</code>.</desc>
			<type name="Selector" />
			<type name="Element" />
			<type name="String" />
			<type name="Array" />
		</option>
		<option name="cursor" default='"auto"'>
			<desc>The CSS cursor during the drag operation.</desc>
			<type name="String" />
		</option>
		<option name="cursorAt" default="false">
			<desc>Sets the offset of the dragging helper relative to the mouse cursor. Coordinates can be given as a hash using a combination of one or two keys: <code>{ top, left, right, bottom }</code>.</desc>
			<type name="Object" />
		</option>
		<option name="delay" default="0">
			<desc>Time in milliseconds after mousedown until dragging should start. This option can be used to prevent unwanted drags when clicking on an element.</desc>
			<type name="Number" />
		</option>
		<xi:include href="../includes/widget-disabled.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<option name="distance" default="1">
			<desc>Distance in pixels after mousedown the mouse must move before dragging should start. This option can be used to prevent unwanted drags when clicking on an element.</desc>
			<type name="Number" />
		</option>
		<option name="grid" default="false">
			<desc>Snaps the dragging helper to a grid, every x and y pixels. The array must be of the form <code>[ x, y ]</code>.</desc>
			<type name="Array" />
		</option>
		<option name="handle" default="false">
			<desc>If specified, restricts dragging from starting unless the mousedown occurs on the specified element(s).</desc>
			<type name="Selector" />
			<type name="Element" />
		</option>
		<option name="helper" default='"original"'>
			<desc>Allows for a helper element to be used for dragging display. Possible values: <code>"original"</code>, <code>"clone"</code>, or a function. If a function is specified, it must return a DOMElement.</desc>
			<type name="String" />
			<type name="Function" />
		</option>
		<option name="iframeFix" default="false">
			<desc>Prevent iframes from capturing the mousemove events during a drag. Useful in combination with the <a href="#option-cursorAt"><code>cursorAt</code></a> option, or in any case where the mouse cursor may not be over the helper. If set to <code>true</code>, transparent overlays will be placed over all iframes on the page. If a selector is supplied, the matched iframes will have an overlay placed over them.</desc>
			<type name="Boolean" />
			<type name="Selector" />
		</option>
		<option name="opacity" default="false">
			<desc>Opacity for the helper while being dragged.</desc>
			<type name="Number" />
		</option>
		<option name="refreshPositions" default="false">
			<desc>If set to <code>true</code>, all droppable positions are calculated on every mousemove. Caution: This solves issues on highly dynamic pages, but dramatically decreases performance.</desc>
			<type name="Boolean" />
		</option>
		<option name="revert" default="false">
			<desc>If set to <code>true</code>, the element will return to its start position when dragging stops. Possible string values: <code>"valid"</code>, <code>"invalid"</code>. If set to <code>"invalid"</code>, revert will only occur if the draggable has not been dropped on a droppable. For <code>"valid"</code>, it's the other way around.</desc>
			<type name="Boolean" />
			<type name="String" />
		</option>
		<option name="revertDuration" default="500">
			<desc>The duration of the revert animation, in milliseconds. Ignored if the <a href="#option-revert"><code>revert</code></a> option is <code>false</code>.</desc>
			<type name="Number" />
		</option>
		<option name="scope" default='"default"'>
			<desc>Used to group sets of draggable and droppable items, in addition to droppable's <a href="/droppable#option-accept"><code>accept</code></a> option. A draggable with the same <code>scope</code> value as a droppable will be accepted by the droppable.</desc>
			<type name="String" />
		</option>
		<option name="scroll" default="true">
			<desc>If set to <code>true</code>, container auto-scrolls while dragging.</desc>
			<type name="Boolean" />
		</option>
		<option name="scrollSensitivity" default="20">
			<desc>Distance in pixels from the edge of the viewport after which the viewport should scroll. Distance is relative to pointer, not the draggable.</desc>
			<type name="Number" />
		</option>
		<option name="scrollSpeed" default="20">
			<desc>The speed at which the window should scroll once the mouse pointer gets within the <a href="#option-scrollSensitivity"><code>scrollSensitivity</code></a> distance.</desc>
			<type name="Number" />
		</option>
		<option name="snap" default="false">
			<desc>If set to a selector or to <code>true</code> (equivalent to <code>".ui-draggable"</code>), the draggable will snap to the edges of the selected elements when near an edge of the element.</desc>
			<type name="Boolean" />
			<type name="Selector" />
		</option>
		<option name="snapMode" default='"both"'>
			<desc>Determines which edges of snap elements the draggable will snap to. Ignored if the <a href="#option-snap"><code>snap</code></a> option is <code>false</code>. Possible values: <code>"inner"</code>, <code>"outer"</code>, <code>"both"</code>.</desc>
			<type name="String" />
		</option>
		<option name="snapTolerance" default="20">
			<desc>The distance in pixels from the snap element edges at which snapping should occur. Ignored if the <a href="#option-snap"><code>snap</code></a> option is <code>false</code>.</desc>
			<type name="Number" />
		</option>
		<option name="stack" default="false">
			<desc>Controls the z-index of the set of elements that match the selector, always brings the currently dragged item to the front. Very useful in things like window managers.</desc>
			<type name="Selector" />
		</option>
		<option name="zIndex" default="false">
			<desc>Z-index for the helper while being dragged.</desc>
			<type name="Number" />
		</option>
	</options>
	<events>
		<xi:include href="../includes/widget-event-create.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<event name="start" type="dragstart">
			<desc>Triggered when dragging starts.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="helper" type="jQuery">
					<desc>The jQuery object representing the helper that's being dragged.</desc>
				</property>
				<property name="position" type="Object">
					<desc>Current CSS position of the helper as <code>{ top, left }</code> object.</desc>
				</property>
				<property name="offset" type="Object">
					<desc>Current offset position of the helper as <code>{ top, left }</code> object.</desc>
				</property>
			</argument>
		</event>
		<event name="drag" type="drag">
			<desc>Triggered while the mouse is moved during the dragging.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="helper" type="jQuery">
					<desc>The jQuery object representing the helper that's being dragged.</desc>
				</property>
				<property name="position" type="Object">
					<desc>Current CSS position of the helper as <code>{ top, left }</code> object.</desc>
				</property>
				<property name="offset" type="Object">
					<desc>Current offset position of the helper as <code>{ top, left }</code> object.</desc>
				</property>
			</argument>
		</event>
		<event name="stop" type="dragstop">
			<desc>Triggered when dragging stops.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="helper" type="jQuery">
					<desc>The jQuery object representing the helper that's being dragged.</desc>
				</property>
				<property name="position" type="Object">
					<desc>Current CSS position of the helper as <code>{ top, left }</code> object.</desc>
				</property>
				<property name="offset" type="Object">
					<desc>Current offset position of the helper as <code>{ top, left }</code> object.</desc>
				</property>
			</argument>
		</event>
	</events>
	<methods>
		<xi:include href="../includes/widget-method-destroy.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-disable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-enable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-option.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-widget.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
	</methods>
	<example>
		<desc>A simple jQuery UI Draggable</desc>
		<css><![CDATA[
	#draggable {
		width: 100px;
		height: 70px;
		background: silver;
	}
]]></css>
		<code><![CDATA[
$( "#draggable" ).draggable();
]]></code>
		<html><![CDATA[
<div id="draggable">Drag me</div>
]]></html>
	</example>
	<category slug="interactions"/>
</entry>
