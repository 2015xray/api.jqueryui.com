<?xml version="1.0"?>
<entry name="accordion" type="widget" widget-element="accordion">
	<title>Accordion Widget</title>
	<desc>Convert a pair of headers and content panels into an accordion.</desc>
	<longdesc>
		<p>The markup of your accordion container needs pairs of headers and content panels:</p>

		<pre><code data-linenum="true"><![CDATA[
<div id="accordion">
	<h3><a href="#">First header</a></h3>
	<div>First content panel</div>
	<h3><a href="#">Second header</a></h3>
	<div>Second content panel</div>
</div>
]]></code></pre>

		<p>Accordions support arbitrary markup, but each content panel must always be the next sibling after its associated header. See the <a href="#option-header"><code>header</code></a> option for information on how to use custom markup structures.</p>
		<p>The panels can be activated programmatically by setting the <a href="#option-active"><code>active</code></a> option.</p>
	</longdesc>
	<note id="functional-css"/>
	<added>1.0</added>
	<options>
		<option name="active" default="0">
			<desc>
				Which panel is currently open.
			</desc>
			<type name="Boolean">
				<desc>Setting <code>active</code> to <code>false</code> will collapse all panels. This requires the <a href="#option-collapsible"><code>collapsible</code></a> option to be <code>true</code>.</desc>
			</type>
			<type name="Integer">
				<desc>The zero-based index of the panel that is active (open).</desc>
			</type>
		</option>
		<option name="animated" default="slide">
			<desc>If and how to animate changing panels.</desc>
			<type name="Boolean">
				<desc>A value of <code>false</code> will disable animations.</desc>
			</type>
			<type name="String">
				<desc>Name of <a href="/easings/">easing</a> to use with default duration. Additionally, values of <code>"slide"</code> and <code>"bounceslide"</code> have built-in custom implementations.</desc>
			</type>
		</option>
		<option name="autoHeight" type="Boolean" default="true">
			<desc>Whether all panels should be set to the height of the tallest panel.</desc>
		</option>
		<option name="clearStyle" type="Boolean" default="false">
			<desc>Whether to clear height and overflow styles after finishing animations. This enabled accordions to work with dynamic content. Requires the <a href="#option-autoHeight"><code>autoHeight</code></a> option to be <code>false</code>.</desc>
		</option>
		<option name="collapsible" type="Boolean" default="false">
			<desc>Whether all the sections can be closed at once. Allows collapsing the active section.</desc>
		</option>
		<xi:include href="../includes/widget-option-disabled.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<option name="event" type="String" default='"click"'>
			<desc>The event that accordion headers will react to in order to activate the associated panel. Multiple events can be specificed, separated by a space.</desc>
		</option>
		<option name="fillSpace" type="String" default="false">
			<desc>Whether the accordion should expand to the available height based on the accordion's parent height. This option will override the <a href="#option-autoHeight"><code>autoHeight</code></a> option.</desc>
		</option>
		<option name="header" type="Selector" default='"> li > :first-child,> :not(li):even"'>
			<desc>
				<p>Selector for the header element, applied via <code>.find()</code> on the main accordion element. Content panels must be the sibling immedately after their associated headers.</p>
			</desc>
		</option>
		<option name="icons" type="Object" default='{ "header": "ui-icon-triangle-1-e", "headerSelected": "ui-icon-triangle-1-s" }'>
			<desc>
				<p>Icons to use for headers, matching an icon defined by the jQuery UI CSS Framework. Set to <code>false</code> to have no icons displayed.</p>
				<ul>
					<li>header (string, default: "ui-icon-triangle-1-e")</li>
					<li>headerSelected (string, default: "ui-icon-triangle-1-s")</li>
				</ul>
			</desc>
		</option>
		<option name="navigation" type="Boolean" default="false">
			<desc>If set, looks for the anchor that matches <code>location.href</code> and activates it. Great for href-based state-saving. Use the <a href="#option-navigationFilter"><code>navigationFilter</code></a> option to implement your own matcher.</desc>
		</option>
		<option name="navigationFilter" type="Function" default="function matching location.href">
			<desc>A function that is invoked for each tab anchor, with the anchor element as the context. Must return <code>true</code> for the tab that should be active on initialization.</desc>
		</option>
	</options>
	<events>
		<event name="change" type="accordionchange">
			<desc>Triggered after a panel has been activated (after animation completes). If the accordion was previously collapsed, <code>ui.oldHeader</code> and <code>ui.oldContent</code> will be empty jQuery objects. If the accordion is collapsing, <code>ui.newHeader</code> and <code>ui.newContent</code> will be empty jQuery objects.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="newHeader" type="jQuery">
					<desc>The header that was just activated.</desc>
				</property>
				<property name="oldHeader" type="jQuery">
					<desc>The header that was just deactivated.</desc>
				</property>
				<property name="newContent" type="jQuery">
					<desc>The panel that was just activated.</desc>
				</property>
				<property name="oldContent" type="jQuery">
					<desc>The panel that was just deactivated.</desc>
				</property>
			</argument>
		</event>
		<event name="changestart" type="accordionchangestart">
			<desc>Triggered directly after a panel is activated. If the accordion is currently collapsed, <code>ui.oldHeader</code> and <code>ui.oldContent</code> will be empty jQuery objects. If the accordion is collapsing, <code>ui.newHeader</code> and <code>ui.newContent</code> will be empty jQuery objects.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="newHeader" type="jQuery">
					<desc>The header that is about to be activated.</desc>
				</property>
				<property name="oldHeader" type="jQuery">
					<desc>The header that is about to be deactivated.</desc>
				</property>
				<property name="newContent" type="jQuery">
					<desc>The panel that is about to be activated.</desc>
				</property>
				<property name="oldContent" type="jQuery">
					<desc>The panel that is about to be deactivated.</desc>
				</property>
			</argument>
		</event>
		<xi:include href="../includes/widget-event-create.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
	</events>
	<methods>
		<method name="activate">
			<argument name="index" type="Integer">
				<desc>The zero-based index of the panel to activate.</desc>
			</argument>
			<desc>Activate a panel.</desc>
		</method>
		<xi:include href="../includes/widget-method-destroy.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-disable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-enable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-option.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<method name="resize">
			<desc>Recompute the height of the accordion panels. Results depend on the content and height-related options.</desc>
		</method>
		<xi:include href="../includes/widget-method-widget.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
	</methods>
	<example>
		<height>350</height>
		<desc>A simple jQuery UI Accordion</desc>
		<code><![CDATA[
$( "#accordion" ).accordion();
]]></code>
		<html><![CDATA[
<div id="accordion">
	<h3><a href="#">Section 1</a></h3>
	<div>
		<p>Mauris mauris ante, blandit et, ultrices a, suscipit eget.
		Integer ut neque. Vivamus nisi metus, molestie vel, gravida in,
		condimentum sit amet, nunc. Nam a nibh. Donec suscipit eros.
		Nam mi. Proin viverra leo ut odio.</p>
	</div>
	<h3><a href="#">Section 2</a></h3>
	<div>
		<p>Sed non urna. Phasellus eu ligula. Vestibulum sit amet purus.
		Vivamus hendrerit, dolor aliquet laoreet, mauris turpis velit,
		faucibus interdum tellus libero ac justo.</p>
	</div>
	<h3><a href="#">Section 3</a></h3>
	<div>
		<p>Nam enim risus, molestie et, porta ac, aliquam ac, risus.
		Quisque lobortis.Phasellus pellentesque purus in massa.</p>
		<ul>
			<li>List item one</li>
			<li>List item two</li>
			<li>List item three</li>
		</ul>
	</div>
</div>
]]></html>
	</example>
	<category slug="widgets"/>
</entry>
