<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="dialog" namespace="fn" type="Widget" widgetnamespace="ui">
	<longdesc>
		
<p>A dialog is a floating window that contains a title bar and a content area. The dialog window can be moved, resized and closed with the 'x' icon by default.</p>

<p>If the content length exceeds the maximum height, a scrollbar will automatically appear.</p>

<p>A bottom button bar and semi-transparent modal overlay layer are common options that can be added.</p>

<p>A call to <code>$(foo).dialog()</code> will initialize a dialog instance and will auto-open the dialog by default. If you want to reuse a dialog, the easiest way is to disable the "auto-open" option with: <code>$(foo).dialog({ autoOpen: false })</code> and open it with <code>$(foo).dialog('open')</code>. To close it, use <code>$(foo).dialog('close')</code>. A more in-depth explanation with a full demo is available on [http://blog.nemikor.com/2009/04/08/basic-usage-of-the-jquery-ui-dialog/ the Nemikor blog].</p>

	</longdesc>
	<created>1.0</created>
	<options>
		<option name="autoOpen" type="Boolean" default='true'>
			<desc>When ''autoOpen'' is ''true'' the dialog will open automatically when ''dialog'' is called. If ''false'' it will stay hidden until ''.dialog("open")'' is called on it.</desc>
		</option>
		<option name="buttons" type="Object" default='{ }'>
			<desc>Specifies which buttons should be displayed on the dialog. The property key is the text of the button. The value is the callback function for when the button is clicked.  The context of the callback is the dialog element; if you need access to the button, it is available as the target of the event object.</desc>
		</option>
		<option name="buttons" type="Array" default='[ ]'>
			<desc>Specifies which buttons should be displayed on the dialog. Each element of the array must be an Object defining the properties to set on the button.</desc>
		</option>
		<option name="closeOnEscape" type="Boolean" default='true'>
			<desc>Specifies whether the dialog should close when it has focus and the user presses the esacpe (ESC) key.</desc>
		</option>
		<option name="closeText" type="String" default='"close"'>
			<desc>Specifies the text for the close button. Note that the close text is visibly hidden when using a standard theme.</desc>
		</option>
		<option name="dialogClass" type="String" default='""'>
			<desc>The specified class name(s) will be added to the dialog, for additional theming.</desc>
		</option>
		<option name="disabled" type="Boolean" default="false">
			<desc>Disables the dialog if set to true.</desc>
		</option>
		<option name="draggable" type="Boolean" default='true'>
			<desc>If set to true, the dialog will be draggable will be draggable by the titlebar.</desc>
		</option>
		<option name="height" type="Number" default='"auto"'>
			<desc>The height of the dialog, in pixels. Specifying 'auto' is also supported to make the dialog adjust based on its content.</desc>
		</option>
		<option name="hide" type="String" default='null'>
			<desc>The effect to be used when the dialog is closed.</desc>
		</option>
		<option name="hide" type="Object" default='null'>
			<desc>The effect to be used when the dialog is closed.</desc>
		</option>
		<option name="maxHeight" type="Number" default='false'>
			<desc>The maximum height to which the dialog can be resized, in pixels.</desc>
		</option>
		<option name="maxWidth" type="Number" default='false'>
			<desc>The maximum width to which the dialog can be resized, in pixels.</desc>
		</option>
		<option name="minHeight" type="Number" default='150'>
			<desc>The minimum height to which the dialog can be resized, in pixels.</desc>
		</option>
		<option name="minWidth" type="Number" default='150'>
			<desc>The minimum width to which the dialog can be resized, in pixels.</desc>
		</option>
		<option name="modal" type="Boolean" default='false'>
			<desc>If set to true, the dialog will have modal behavior; other items on the page will be disabled (i.e. cannot be interacted with). Modal dialogs create an overlay below the dialog but above other page elements.</desc>
		</option>
		<option name="position" type="String, Array" default='"center"'>
			<desc>Specifies where the dialog should be displayed. Possible values: <br/>1) a single string representing position within viewport: 'center', 'left', 'right', 'top', 'bottom'. <br/>2) an array containing an <em>x,y</em> coordinate pair in pixel offset from left, top corner of viewport (e.g. [350,100]) <br/>3) an array containing <em>x,y</em> position string values (e.g. ['right','top'] for top right corner).</desc>
		</option>
		<option name="resizable" type="Boolean" default='true'>
			<desc>If set to true, the dialog will be resizable.</desc>
		</option>
		<option name="show" type="String" default='null'>
			<desc>The effect to be used when the dialog is opened.</desc>
		</option>
		<option name="show" type="Object" default='null'>
			<desc>The effect to be used when the dialog is opened.</desc>
		</option>
		<option name="stack" type="Boolean" default='true'>
			<desc>Specifies whether the dialog will stack on top of other dialogs. This will cause the dialog to move to the front of other dialogs when it gains focus.</desc>
		</option>
		<option name="title" type="String" default='""'>
			<desc>Specifies the title of the dialog. Any valid HTML may be set as the title. The title can also be specified by the title attribute on the dialog source element.</desc>
		</option>
		<option name="width" type="Number" default='300'>
			<desc>The width of the dialog, in pixels.</desc>
		</option>
		<option name="zIndex" type="Integer" default='1000'>
			<desc>The starting z-index for the dialog.</desc>
		</option>

	</options>
	<events>
		<event name="beforeClose" type="dialogbeforeclose">
			<desc>This event is triggered when a dialog attempts to close. If the beforeClose event handler (callback function) returns false, the close will be prevented.
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="open" type="dialogopen">
			<desc>This event is triggered when dialog is opened.
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="focus" type="dialogfocus">
			<desc>This event is triggered when the dialog gains focus.
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="dragStart" type="dialogdragstart">
			<desc>This event is triggered at the beginning of the dialog being dragged.
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="drag" type="dialogdrag">
			<desc>This event is triggered when the dialog is dragged.
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="dragStop" type="dialogdragstop">
			<desc>This event is triggered after the dialog has been dragged.
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="resizeStart" type="dialogresizestart">
			<desc>This event is triggered at the beginning of the dialog being resized.
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="resize" type="dialogresize">
			<desc>This event is triggered when the dialog is resized. [http://www.jsfiddle.net/Jp7TM/18/ demo]
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="resizeStop" type="dialogresizestop">
			<desc>This event is triggered after the dialog has been resized.
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>
		<event name="close" type="dialogclose">
			<desc>This event is triggered when the dialog is closed.
</desc>
			<argument name="event" type="Event">
				<desc></desc>
			</argument>
			<argument name="ui" type="Object">
				<desc></desc>
			</argument>
		</event>

	</events>
	<methods>
		<method name="close">
			<desc>Close the dialog.</desc>
		</method>
		<method name="isOpen">
			<desc>Returns true if the dialog is currently open.</desc>
		</method>
		<method name="moveToTop">
			<desc>Move the dialog to the top of the dialogs stack.</desc>
		</method>
		<method name="open">
			<desc>Open the dialog.</desc>
		</method>

	</methods>
	<example>

		<desc>A simple jQuery UI Dialog.</desc>
		<code><![CDATA[$("#dialog").dialog();]]></code>
		<html><![CDATA[
<div id="dialog" title="Dialog Title">I'm in a dialog</div>

]]></html>

	</example>
	<category slug="widgets"/>
</entry>
