<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../entries2html.xsl" ?>
<entry name="tabs" namespace="fn" type="widget" widgetnamespace="ui">
	<title>Tabs Widget</title>
	<desc>A single content area with multiple panels, each associated with a header in a list.</desc>
	<longdesc>
		<p>Tabs are generally used to break content into multiple sections that can be swapped to save space, much like an accordion.</p>

		<p>The content for each tab panel can be defined in-page or can be loaded via Ajax; both are handled automatically based on the <code>href</code> of the anchor associated with the tab. By default tabs are activated on click, but the events can be changed to hover via the <a href="#option-event"><code>event</code></a> option.</p>
	</longdesc>
	<note id="functional-css"/>
	<added>1.0</added>
	<options>
		<option name="active" default="0">
			<desc>
				The zero-based index of the panel that is active (open). A negative value select panels going backward from the last panel.
				<p>When the <a href="#option-collapsible"><code>collapsible</code></a> option is set to <code>true</code>, a value of <code>false</code> closes all panels; otherwise nothing happens.</p>
			</desc>
			<type name="Boolean" />
			<type name="Number" />
		</option>
		<option name="collapsible" default="false">
			<desc>When set to <code>true</code>, the active panel can be closed.</desc>
			<type name="Boolean" />
		</option>
		<option name="disabled" default="false">
			<desc>When set to <code>true</code> or <code>false</code>, all panels will be disabled or enabled, respectively. Can also be set to an array containing the indexes of the tabs (zero-based) that should be disabled, e.g., <code>[ 0, 2 ]</code> would disable the first and third tab.</desc>
			<type name="Boolean" />
			<type name="Array" />
		</option>
		<option name="event" default='"click"'>
			<desc>The type of event that the tabs should react to in order to activate the tab. To activate on hover, use <code>"mouseover"</code>.</desc>
			<type name="String" />
		</option>
		<option name="heightStyle" default='"auto"'>
			<desc>
				Controls the height of the tabs widget and each panel. Possible values:
				<ul>
					<li><code>"auto"</code>: All panels will be set to the height of the tallest panel.</li>
					<li><code>"fill"</code>: Expand to the available height based on the tabs' parent height.</li>
					<li><code>"content"</code>: Each panel will be only as tall as its content.</li>
				</ul>
			</desc>
			<type name="String" />
		</option>
		<option name="hide" default="true">
			<desc>How to hide a panel.</desc>
			<type name="Boolean" />
			<type name="Object" />
		</option>
		<option name="show" default="true">
			<desc>How to show a panel.</desc>
			<type name="Boolean" />
			<type name="Object" />
		</option>
	</options>
	<events>
		<event name="activate" type="accordionactivate">
			<desc>Triggered after a tab has been activated (after animation completes). If the tabs were previously collapsed, <code>ui.oldTab</code> and <code>ui.oldPanel</code> will be empty jQuery objects. If the tabs are collapsing, <code>ui.newTab</code> and <code>ui.newPanel</code> will be empty jQuery objects.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="newTab" type="jQuery">
					<desc>The tab that was just activated.</desc>
				</property>
				<property name="oldTab" type="jQuery">
					<desc>The tab that was just deactivated.</desc>
				</property>
				<property name="newPanel" type="jQuery">
					<desc>The panel that was just activated.</desc>
				</property>
				<property name="oldPanel" type="jQuery">
					<desc>The panel that was just deactivated.</desc>
				</property>
			</argument>
		</event>
		<event name="beforeActivate" type="accordionbeforeactivate">
			<desc>Triggered directly after a tab is activated. Can be canceled to prevent the tab from activating. If the tabs are currently collapsed, <code>ui.oldTab</code> and <code>ui.oldPanel</code> will be empty jQuery objects. If the tabs are collapsing, <code>ui.newTab</code> and <code>ui.newPanel</code> will be empty jQuery objects.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="newTab" type="jQuery">
					<desc>The tab that is about to be activated.</desc>
				</property>
				<property name="oldTab" type="jQuery">
					<desc>The tab that is about to be deactivated.</desc>
				</property>
				<property name="newPanel" type="jQuery">
					<desc>The panel that is about to be activated.</desc>
				</property>
				<property name="oldPanel" type="jQuery">
					<desc>The panel that is about to be deactivated.</desc>
				</property>
			</argument>
		</event>
		<event name="beforeLoad" type="tabsload">
			<desc>Triggered when a remote tab is about to be loaded, after the <a href="#event-beforeActivate"><code>beforeActivate</code></a> event. Can be canceled to prevent the tab panel from loading content; though the panel will still be activated. This event is triggered just before the Ajax request is made, so modifications can be made to <code>ui.jqXHR</code> and <code>ui.ajaxSettings</code>.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="tab" type="jQuery">
					<desc>The tab that is being loaded.</desc>
				</property>
				<property name="panel" type="jQuery">
					<desc>The panel which will be populated by the Ajax response.</desc>
				</property>
				<property name="jqXHR" type="jqXHR">
					<desc>The <code>jqXHR</code> object that is requesting the content.</desc>
				</property>
				<property name="ajaxSettings" type="Object">
					<desc>The settings that will be used by <a href="//api.jquery.com/jQuery.ajax"><code>jQuery.ajax</code></a> to request the content.</desc>
				</property>
			</argument>
		</event>
		<event name="create">
			<desc>Triggered when the tabs are created. If the tabs are collapsed, <code>ui.tab</code> and <code>ui.panel</code> will be empty jQuery objects.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="tab" type="jQuery">
					<desc>The active tab.</desc>
				</property>
				<property name="panel" type="jQuery">
					<desc>The active panel.</desc>
				</property>
			</argument>
		</event>
		<event name="load" type="tabsload">
			<desc>Triggered after a remote tab has been loaded.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="tab" type="jQuery">
					<desc>The tab that was just loaded.</desc>
				</property>
				<property name="panel" type="jQuery">
					<desc>The panel which was just populated by the Ajax response.</desc>
				</property>
			</argument>
		</event>
	</events>
	<methods>
		<xi:include href="../includes/widget-method-destroy.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-disable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<method name="disable">
			<desc>
				Disables a tab. The selected tab cannot be disabled. To disable more than one tab at once, set the <a href="#option-disabled"><code>disabled</code></a> option: <code>$( "#tabs" ).tabs( "option", "disabled", [ 1, 2, 3 ] )</code>.
			</desc>
			<argument name="index" type="Number, String">
				<desc>The zero-based index of the tab to be disabled. Instead of an index, the <code>href</code> of the tab may be passed.</desc>
			</argument>
		</method>
		<xi:include href="../includes/widget-method-enable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<method name="enable">
			<desc>
				Enables a tab. To enable more than one tab at once reset the disabled property like: <code>$( "#example" ).tabs( "option", "disabled", [] );</code>.
			</desc>
			<argument name="index" type="Number, String">
				<desc>The zero-based index of the tab to be enabled. Instead of an index, the <code>href</code> of the tab may be passed.</desc>
			</argument>
		</method>
		<method name="load">
			<desc>Loads the panel content of a remote tab.</desc>
			<argument name="index" type="Number, String">
				<desc>The zero-baesd index of the tab the be loaded. Instead of an index, the <code>href</code> of the tab may be passed.</desc>
			</argument>
		</method>
		<xi:include href="../includes/widget-method-option.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-widget.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
	</methods>
	<example>
		<desc>A simple jQuery UI Tabs</desc>
		<code><![CDATA[
$( "#tabs" ).tabs();
]]></code>
		<html><![CDATA[
<div id="tabs">
	<ul>
		<li><a href="#fragment-1"><span>One</span></a></li>
		<li><a href="#fragment-2"><span>Two</span></a></li>
		<li><a href="#fragment-3"><span>Three</span></a></li>
	</ul>
	<div id="fragment-1">
		<p>First tab is active by default:</p>
		<pre><code>$( "#tabs" ).tabs(); </code></pre>
	</div>
	<div id="fragment-2">
		Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
		Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
	</div>
	<div id="fragment-3">
		Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
		Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
		Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.
	</div>
</div>
]]></html>
	</example>
	<category slug="widgets"/>
</entry>
