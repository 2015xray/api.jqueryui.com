<?xml version="1.0"?>
<entry name="selectable" type="widget" widget-element="selectable element">
	<title>Selectable Widget</title>
	<desc>Use the mouse to select individual or a group of elements</desc>
	<longdesc>
		<p>The jQuery UI Selectable plugin allows for elements to be selected by dragging a box (sometimes called a lasso) with the mouse over the elements. Also, elements can be selected by click or drag while holding the Ctrl/Meta key, allowing for multiple (non-contiguous) selections.</p>
	</longdesc>
	<note id="functional-css"/>
	<added>1.0</added>
	<options>
		<option name="autoRefresh" default='true'>
			<desc>This determines whether to refresh (recalculate) the position and size of each selectee at the beginning of each select operation. If you have many many items, you may want to set this to false and call the refresh method manually.</desc>
			<type name="Boolean" />
		</option>
		<option name="cancel" default='":input,option"'>
			<desc>Prevents selecting if you start on elements matching the selector.</desc>
			<type name="Selector" />
		</option>
		<option name="delay" default='0'>
			<desc>Time in milliseconds to define when the selecting should start. It helps preventing unwanted selections when clicking on an element.</desc>
			<type name="Number" />
		</option>
		<xi:include href="../includes/widget-option-disabled.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<option name="distance" default='0'>
			<desc>Tolerance, in pixels, for when selecting should start. If specified, selecting will not start until after mouse is dragged beyond distance.</desc>
			<type name="Number" />
		</option>
		<option name="filter" default='"*"'>
			<desc>The matching child elements will be made selectees (able to be selected).</desc>
			<type name="Selector" />
		</option>
		<option name="tolerance" default='"touch"'>
			<desc>
				Possible values: 'touch', 'fit'.
				<ul>
					<li>'''fit''': draggable overlaps the droppable entirely</li>
					<li>'''touch''': draggable overlaps the droppable any amount</li>
				</ul>
			</desc>
			<type name="String" />
		</option>

	</options>
	<events>
		<xi:include href="../includes/widget-event-create.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<event name="selected" type="selectableselected">
			<desc>This event is triggered at the end of the select operation, on each element added to the selection.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="selected" type="Element">
					<desc>The selectable item that has been selected</desc>
				</property>
			</argument>
		</event>
		<event name="selecting" type="selectableselecting">
			<desc>This event is triggered during the select operation, on each element added to the selection.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="selecting" type="Element">
					<desc>The current selectable item being selected</desc>
				</property>
			</argument>
		</event>
		<event name="start" type="selectablestart">
			<desc>This event is triggered at the beginning of the select operation.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object"/>
		</event>
		<event name="stop" type="selectablestop">
			<desc>This event is triggered at the end of the select operation.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object"/>
		</event>
		<event name="unselected" type="selectableunselected">
			<desc>This event is triggered at the end of the select operation, on each element removed from the selection.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="unselected" type="Element">
					<desc>The selectable item that has been unselected</desc>
				</property>
			</argument>
		</event>
		<event name="unselecting" type="selectableunselecting">
			<desc>This event is triggered during the select operation, on each element removed from the selection.</desc>
			<argument name="event" type="Event"/>
			<argument name="ui" type="Object">
				<property name="unselecting" type="Element">
					<desc>The current selectable item being unselected</desc>
				</property>
			</argument>
		</event>
	</events>
	<methods>
		<xi:include href="../includes/widget-method-destroy.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-disable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-enable.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<method name="refresh">
			<desc> Refresh the position and size of each selectee element. This method can be used to manually recalculate the position and size of each selectee element. Very useful if autoRefresh is set to false.</desc>
		</method>
		<xi:include href="../includes/widget-method-option.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
		<xi:include href="../includes/widget-method-widget.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
	</methods>
	<example>

		<desc>A simple jQuery UI Selectable.</desc>
		<css><![CDATA[
	#selectable .ui-selecting {
		background: silver;
	}
	#selectable .ui-selected {
		background: gray;
	}
]]></css>
		<code><![CDATA[$("#selectable").selectable();]]></code>
		<html><![CDATA[
<ul id="selectable">
	<li>Item 1</li>
	<li>Item 2</li>
	<li>Item 3</li>
	<li>Item 4</li>
	<li>Item 5</li>
</ul>

]]></html>

	</example>
	<category slug="interactions"/>
</entry>
